name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      merged_data: ${{ steps.extract.outputs.merged_data }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scikit-learn pandas numpy matplotlib seaborn keras tensorflow cvxopt black[jupyter]



  data:
    runs-on: ubuntu-latest
    steps:
      - name: Create data directory
        run: mkdir -p data

      - name: Download dataset
        run: |
          curl -L -o data/dataset.zip https://uni-siegen.sciebo.de/s/HGdUkoNlW1Ub0Gx/download
          if file data/dataset.zip | grep -q 'Zip archive data'; then
            echo "Valid ZIP file."
          else
            echo "Invalid ZIP file. Exiting."
            exit 1
          fi
      
      - name: Install Jupyter
        run: |
          pip install jupyter

      - name: Check Directory Structure
        run: |
          ls -l
          ls -l code
          
      - name: Preprocess dataset
        run: |
          if [ -d "code" ]; then  # Check if the directory exists
            cd code  # Navigate to the directory containing the notebook
            jupyter nbconvert --to script unzip_script.ipynb
            python unzip_script.py
          else
            echo "Directory 'code' not found."
            exit 1
          fi

  run:
    needs: [build, data]
    runs-on: ubuntu-latest
    steps:
      - name: Run Jupyter notebook
        run: |
          pip install nbconvert
          jupyter nbconvert --to script eda_signal_classification.ipynb
          python eda_signal_classification.py

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        id: action_black
        with: 
          options: "--verbose"
          src: "./code"
          jupyter: true
